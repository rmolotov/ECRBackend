services:
  
  usersdb:
    environment:
      MSSQL_SA_PASSWORD: "password123!"
      ACCEPT_EULA: "Y"
    restart: always
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${MSSQL_SA_PASSWORD}" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - "1433:1433"
    
  configsdb:
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    
  cache:
    container_name: cache
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - "6379:6379"
    
  infrastructure-identity:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5001
    depends_on: 
      usersdb:
        condition: service_healthy
    ports:
      - "5001:5001"
        
  infrastructure-gateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5050
    depends_on:
      usersdb:
        condition: service_healthy
    ports:
      - "5050:5050"
      
  usermanagement-webapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5002
    depends_on: 
      - infrastructure-identity
    ports:
      - "5002:5002"

  remoteconfig-webapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:5003
    depends_on: 
      configsdb:
          condition: service_healthy
      infrastructure-identity:
        condition: service_started
      usermanagement-webapi:
        condition: service_started
    ports:
      - "5003:5003"
